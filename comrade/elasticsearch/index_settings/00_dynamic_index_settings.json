{
  "description": "Below is a list of all _dynamic_ index settings that are not associated with any\nspecific index module:",
  "settings": [
    {
      "description": "The number of replicas each primary shard has.  Defaults to 1.",
      "name": "index.number_of_replicas"
    },
    {
      "description": "Auto-expand the number of replicas based on the number of data nodes in the cluster.\n    Set to a dash delimited lower and upper bound (e.g. `0-5`) or use `all`\n    for the upper bound (e.g. `0-all`). Defaults to `false` (i.e. disabled).\n    Note that the auto-expanded number of replicas does not take any other allocation\n    rules into account, such as <<allocation-awareness,shard allocation awareness>>,\n    <<shard-allocation-filtering,filtering>> or <<allocation-total-shards,total shards per node>>,\n    and this can lead to the cluster health becoming `YELLOW` if the applicable rules\n    prevent all the replicas from being allocated.",
      "name": "index.auto_expand_replicas"
    },
    {
      "description": "How long a shard can not receive a search or get request until it's considered\n    search idle. (default is `30s`)",
      "name": "index.search.idle.after"
    },
    {
      "description": "How often to perform a refresh operation, which makes recent changes to the\n    index visible to search. Defaults to `1s`.  Can be set to `-1` to disable\n    refresh. If this setting is not explicitly set, shards that haven't seen\n    search traffic for at least `index.search.idle.after` seconds will not receive\n    background refreshes until they receive a search request. Searches that hit an\n    idle shard where a refresh is pending will wait for the next background\n    refresh (within `1s`). This behavior aims to automatically optimize bulk\n    indexing in the default case when no searches are performed. In order to opt\n    out of this behavior an explicit value of `1s` should set as the refresh\n    interval.",
      "name": "index.refresh_interval"
    },
    {
      "description": "The maximum value of `from + size` for searches to this index. Defaults to\n    `10000`. Search requests take heap memory and time proportional to\n    `from + size` and this limits that memory. See\n    <<request-body-search-scroll,Scroll>> or <<request-body-search-search-after,Search After>> for a more efficient alternative\n    to raising this.",
      "name": "index.max_result_window"
    },
    {
      "description": "The maximum value of `from + size` for inner hits definition and top hits aggregations to this index. Defaults to\n    `100`. Inner hits and top hits aggregation take heap memory and time proportional to `from + size` and this limits that memory.",
      "name": "index.max_inner_result_window"
    },
    {
      "description": "The maximum value of `window_size` for `rescore` requests in searches of this index.\n    Defaults to `index.max_result_window` which defaults to `10000`. Search\n    requests take heap memory and time proportional to\n    `max(window_size, from + size)` and this limits that memory.",
      "name": "index.max_rescore_window"
    },
    {
      "description": "The maximum number of `docvalue_fields` that are allowed in a query.\n    Defaults to `100`. Doc-value fields are costly since they might incur\n    a per-field per-document seek.",
      "name": "index.max_docvalue_fields_search"
    },
    {
      "description": "The maximum number of `script_fields` that are allowed in a query.\n    Defaults to `32`.",
      "name": "index.max_script_fields"
    },
    {
      "description": "The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter.\n    Defaults to `1`.",
      "name": "index.max_ngram_diff"
    },
    {
      "description": "The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter.\n    Defaults to `3`.",
      "name": "index.max_shingle_diff"
    },
    {
      "description": "Set to `true` to make the index and index metadata read only, `false` to\n    allow writes and metadata changes.",
      "name": "index.blocks.read_only"
    },
    {
      "description": "Similar to `index.blocks.read_only` but also allows deleting the index to\n    free up resources. The <<disk-allocator,disk-based shard allocator>> may\n    add and remove this block automatically.",
      "name": "index.blocks.read_only_allow_delete"
    },
    {
      "description": "Set to `true` to disable read operations against the index.",
      "name": "index.blocks.read"
    },
    {
      "description": "Set to `true` to disable data write operations against the index. Unlike `read_only`,\n    this setting does not affect metadata. For instance, you can close an index with a `write`\n    block, but not an index with a `read_only` block.",
      "name": "index.blocks.write"
    },
    {
      "description": "Set to `true` to disable index metadata reads and writes.",
      "name": "index.blocks.metadata"
    },
    {
      "description": "Maximum number of refresh listeners available on each shard of the index.\n    These listeners are used to implement <<docs-refresh,`refresh=wait_for`>>.",
      "name": "index.max_refresh_listeners"
    },
    {
      "description": "The maximum number of tokens that can be produced using _analyze API.\n    Defaults to `10000`.",
      "name": "index.analyze.max_token_count"
    },
    {
      "description": "The maximum number of characters that will be analyzed for a highlight request.\n     This setting is only applicable when highlighting is requested on a text that was indexed without offsets or term vectors.\n     Defaults to `1000000`.\n\n[[index-max-terms-count]]",
      "name": "index.highlight.max_analyzed_offset"
    },
    {
      "description": "The maximum number of terms that can be used in Terms Query.\n    Defaults to `65536`.\n\n[[index-max-regex-length]]",
      "name": "index.max_terms_count"
    },
    {
      "description": "The maximum length of regex that can be used in Regexp Query.\n    Defaults to `1000`.",
      "name": "index.max_regex_length"
    },
    {
      "description": "Controls shard allocation for this index. It can be set to:\n    * `all` (default) - Allows shard allocation for all shards.\n    * `primaries` - Allows shard allocation only for primary shards.\n    * `new_primaries` - Allows shard allocation only for newly-created primary shards.\n    * `none` - No shard allocation is allowed.",
      "name": "index.routing.allocation.enable"
    },
    {
      "description": "Enables shard rebalancing for this index. It can be set to:\n    * `all` (default) - Allows shard rebalancing for all shards.\n    * `primaries` - Allows shard rebalancing only for primary shards.\n    * `replicas` - Allows shard rebalancing only for replica shards.\n    * `none` - No shard rebalancing is allowed.",
      "name": "index.routing.rebalance.enable"
    },
    {
      "description": "The length of time that a <<delete-versioning,deleted document's version number>> remains available for <<index-versioning,further versioned operations>>.\n    Defaults to `60s`.",
      "name": "index.gc_deletes"
    },
    {
      "description": "The default <<ingest,ingest node>> pipeline for this index. Index requests will fail\n    if the default pipeline is set and the pipeline does not exist. The default may be\n    overridden using the `pipeline` parameter. The special pipeline name `_none` indicates\n    no ingest pipeline should be run.\n\n[float]\n=",
      "name": "index.default_pipeline"
    }
  ],
  "name": "Dynamic index settings"
}