{
  "description": "The data in the translog is only persisted to disk when the translog is\n++fsync++ed and committed. In the event of a hardware failure or an operating\nsystem crash or a JVM crash or a shard failure, any data written since the\nprevious translog commit will be lost.\n\nBy default, `index.translog.durability` is set to `request` meaning that\nElasticsearch will only report success of an index, delete, update, or bulk\nrequest to the client after the translog has been successfully ++fsync++ed and\ncommitted on the primary and on every allocated replica. If\n`index.translog.durability` is set to `async` then Elasticsearch ++fsync++s and\ncommits the translog only every `index.translog.sync_interval` which means that\nany operations that were performed just before a crash may be lost when the node\nrecovers.\n\nThe following <<indices-update-settings,dynamically updatable>> per-index\nsettings control the behaviour of the translog:",
  "settings": [
    {
      "description": "How often the translog is ++fsync++ed to disk and committed, regardless of\n  write operations. Defaults to `5s`. Values less than `100ms` are not allowed.",
      "name": "index.translog.sync_interval"
    },
    {
      "description": "+\n--\n\nWhether or not to `fsync` and commit the translog after every index, delete,\nupdate, or bulk request. This setting accepts the following parameters:",
      "name": "index.translog.durability"
    },
    {
      "description": "(default) `fsync` and commit after every request. In the event of hardware\n    failure, all acknowledged writes will already have been committed to disk.",
      "name": "request"
    },
    {
      "description": "`fsync` and commit in the background every `sync_interval`. In\n    the event of a failure, all acknowledged writes since the last\n    automatic commit will be discarded.\n--",
      "name": "async"
    },
    {
      "description": "The translog stores all operations that are not yet safely persisted in Lucene\n  (i.e., are not part of a Lucene commit point). Although these operations are\n  available for reads, they will need to be replayed if the shard was stopped\n  and had to be recovered. This setting controls the maximum total size of these\n  operations, to prevent recoveries from taking too long. Once the maximum size\n  has been reached a flush will happen, generating a new Lucene commit point.\n  Defaults to `512mb`.\n\n[float]\n[[index-modules-translog-retention]]\n==",
      "name": "index.translog.flush_threshold_size"
    }
  ],
  "name": "Translog settings"
}