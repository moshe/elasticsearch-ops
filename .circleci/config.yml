version: 2
jobs:
  "build-client":
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - client2-{{ checksum "client/Dockerfile" }}
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            if [ -f caches/client.tar ]; then docker load -i caches/client.tar; docker images; fi
      - run:
          name: Build application Docker image
          command: |
            docker build --tag client -f client/Dockerfile .
      - run:
          name: Save built docker to workspace
          command: |
            mkdir -p workspace
            docker save -o workspace/client.tar client
      - persist_to_workspace:
          root: workspace
          paths:
            - client.tar
  "cache-client":
    machine: true
    steps:
      - checkout
      - run:
         name: Save Docker image layer cache
         command: |
           mkdir -p caches/
           docker build --tag client -f client/Dockerfile .
           docker save $(docker history -q client | grep -v '^<missing>$') -o caches/client.tar
      - save_cache:
          key: client2-{{ checksum "client/Dockerfile" }}
          paths:
            - caches/
  "build-server":
    machine: true
    steps:
      - checkout
      - restore_cache:
         keys:
           - server-{{ checksum "server/Dockerfile" }}-{{ .Branch }}
           - server-{{ checksum "server/Dockerfile" }}
      - run:
         name: Load Docker image layer cache
         command: |
           set +o pipefail
           if [ -f caches/${CIRCLE_PROJECT_REPONAME}-server.tar.gz ]; then gunzip -c caches/${CIRCLE_PROJECT_REPONAME}-server.tar.gz | docker load; docker images; fi
      - run:
         name: Build application Docker image
         command: |
           docker build --tag ${CIRCLE_PROJECT_REPONAME}-server -f server/Dockerfile .
      - run:
         name: Save Docker image layer cache
         command: |
           mkdir -p caches/
           docker build --tag ${CIRCLE_PROJECT_REPONAME}-server -f server/Dockerfile . | grep '\-\-\->' | grep -v 'Using cache' | sed -e 's/[ >-]//g' > /tmp/layers-server.txt
           docker save $(cat /tmp/layers-server.txt) | gzip > caches/${CIRCLE_PROJECT_REPONAME}-server.tar.gz
      - save_cache:
         key: server-{{ checksum "server/Dockerfile" }}-{{ .Branch }}
         paths:
           - caches/
  "build-ui":
    machine: true
    steps:
      - attach_workspace:
         at: workspace/
      - run:
         name: Load Docker image layer cache
         command: |
           docker load -i workspace/client.tar
      - run:
         name: 'build'
         command: |
           docker run -it $(docker images --format '{{.ID}}') npm run build
  lint:
    machine: true
    steps:
      - attach_workspace:
         at: workspace/
      - run:
         name: Load Docker image layer cache
         command: |
           docker load -i workspace/client.tar
      - run:
         name: 'lint'
         command: |
           docker run -it $(docker images --format '{{.ID}}') npm run lint --no-fix
workflows:
  version: 2
  build_and_test:
    jobs:
      - "build-client"
      - "build-server"
      - "cache-client":
          requires:
            - "build-client"
      - "build-ui":
          requires:
            - "build-client"
      - lint:
          requires:
            - "build-client"
