version: 2.1
jobs:
  build-client:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          keys:
            - client7-{{ checksum "client/package-lock.json" }}
      - run:
          name: npm install
          command: cd client ; npm install
      - run:
         name: build
         command: |
           cd client
           npm run build
      - save_cache:
          key: client7-{{ checksum "client/package-lock.json" }}
          paths:
            - client/node_modules/
      - persist_to_workspace:
          root: ~/
          paths:
            - project/client

  build-e2e:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          keys:
            - e2e-{{ checksum "e2e/package-lock.json" }}
      - run:
          name: npm install
          command: cd e2e ; npm install
      - save_cache:
          key: e2e-{{ checksum "e2e/package-lock.json" }}
          paths:
            - e2e/node_modules/
      - persist_to_workspace:
          root: ~/
          paths:
            - project/e2e
  eslint:
    docker:
      - image: circleci/node:12
    steps:
      - attach_workspace:
         at: ~/
      - run:
         name: eslint
         command: cd client && npm run lint --no-fix
  build-server:
    machine: true
    steps:
      - checkout
      - restore_cache:
         keys:
           - server3-{{ checksum "server/Pipfile.lock" }}-{{ checksum "server/Dockerfile" }}
      - run:
         name: Load Docker image layer cache
         command: test -f caches/server.tar && (docker load -i caches/server.tar) || echo 'Cache not found'
      - run:
         name: Build application Docker image
         command: docker build --tag server:latest -f server/Dockerfile .
      - run:
         name: flake8
         command: docker run -it server pipenv run flake8 --max-line-length=1000
      - run:
          name: Save built docker to workspace
          command: |
            mkdir -p ~/dockers
            docker save -o ~/dockers/server.tar server:latest
      - persist_to_workspace:
          root: ~/
          paths:
            - dockers
  cache-server:
    machine: true
    steps:
      - checkout
      - restore_cache:
         keys:
           - server3-{{ checksum "server/Pipfile.lock" }}-{{ checksum "server/Dockerfile" }}
      - run:
         name: Load Docker image layer cache
         command: test -f caches/server.tar && (docker load -i caches/server.tar) || echo 'Cache not found'
      - run:
         name: Save Docker image layer cache
         command: |
           mkdir -p caches/
           docker build --tag server -f server/Dockerfile .
           docker save $(docker history -q server | grep -v '^<missing>$') -o caches/server.tar
      - save_cache:
          key: server3-{{ checksum "server/Pipfile.lock" }}-{{ checksum "server/Dockerfile" }}
          paths:
            - caches/
  pytest:
    machine: true
    steps:
      - attach_workspace:
         at: ~/
      - run:
         name: Load Docker image layer cache
         command: docker load -i ~/dockers/server.tar
      - run:
         name: pytest
         command: docker run -it server pipenv run pytest
  build-docker:
    machine: true
    steps:
      - checkout
      - attach_workspace:
         at: ~/
      - run:
         name: Load Docker image layer cache
         command: docker load -i ~/dockers/server.tar
      - run: docker-compose build
      - run: docker-compose up --abort-on-container-exit --exit-code-from e2e
      - run:
          name: "Failure: output container logs to console"
          command: |
            docker-compose logs
          when: on_fail
      - store_artifacts:
          path: e2e/cypress/videos
      - store_artifacts:
          path: e2e/cypress/screenshots
workflows:
  build_and_test:
    jobs:
      - build-client
      - build-e2e
      - eslint:
          requires:
            - build-client
      - build-server
      - build-docker:
          requires:
            - build-server
            - build-client
            - build-e2e
      - cache-server
      - pytest:
          requires:
            - build-server
