version: 2
jobs:
  "install-client":
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          keys:
            - client5-{{ checksum "client/package-lock.json" }}

      - run:
          name: npm install
          command: cd client && npm ci
      - save_cache:
          key: client5-{{ checksum "client/package-lock.json" }}
          paths:
            - client/node_modules/
      - persist_to_workspace:
          root: ~/
          paths:
            - project
  "build-ui":
    docker:
      - image: circleci/node:12
    steps:
      - attach_workspace:
          at: ~/
      - run:
         name: 'build'
         command: |
           cd client
           npm run build
  eslint:
    docker:
      - image: circleci/node:12
    steps:
      - attach_workspace:
         at: ~/
      - run:
         name: 'eslint'
         command: cd client && npm run lint --no-fix
  "build-server":
    machine: true
    steps:
      - checkout
      - restore_cache:
         keys:
           - server2-{{ checksum "server/Pipfile.lock" }}
      - run:
         name: Load Docker image layer cache
         command: test -f caches/server.tar && (docker load -i caches/server.tar) || echo 'Cache not found'
      - run:
         name: Build application Docker image
         command: docker build --tag server -f server/Dockerfile .
      - run:
          name: Save built docker to workspace
          command: |
            mkdir -p ~/dockers
            docker save -o ~/dockers/server.tar server:latest
      - persist_to_workspace:
          root: ~/
          paths:
            - dockers
  "cache-server":
    machine: true
    steps:
      - checkout
      - restore_cache:
         keys:
           - server2-{{ checksum "server/Pipfile.lock" }}
      - run:
         name: Load Docker image layer cache
         command: test -f caches/server.tar && (docker load -i caches/server.tar) || echo 'Cache not found'
      - run:
         name: Save Docker image layer cache
         command: |
           mkdir -p caches/
           docker build --tag server -f server/Dockerfile .
           docker save $(docker history -q server | grep -v '^<missing>$') -o caches/server.tar
      - save_cache:
          key: server2-{{ checksum "server/Pipfile.lock" }}
          paths:
            - caches/
  flake8:
    machine: true
    steps:
      - attach_workspace:
         at: ~/
      - run:
         name: Load Docker image layer cache
         command: docker load -i ~/dockers/server.tar
      - run:
         name: 'flake8'
         command: docker run -it server pipenv run flake8 --max-line-length=1000
  pytest:
    machine: true
    steps:
      - attach_workspace:
         at: ~/
      - run:
         name: Load Docker image layer cache
         command: docker load -i ~/dockers/server.tar
      - run:
         name: 'pytest'
         command: docker run -it $(docker images --format '{{.ID}}') pipenv run pytest
workflows:
  version: 2
  build_and_test:
    jobs:
      - "install-client"
      - "build-ui":
          requires:
            - "install-client"
      - eslint:
          requires:
            - "install-client"
      - "build-server"
      - "cache-server":
          requires:
            - "build-server"
      - "flake8":
          requires:
            - "build-server"
      - "pytest":
          requires:
            - "build-server"
